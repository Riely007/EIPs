(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{357:function(t,a,s){t.exports=s.p+"assets/img/example-flow.aa3bb6ef.png"},675:function(t,a,s){"use strict";s.r(a);var e=s(46),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"simple-summary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),e("p",[t._v("A contract interface for receiving meta transactions through a trusted\nforwarder.")]),t._v(" "),e("h2",{attrs:{id:"abstract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),e("p",[t._v("This ERC defines a minimal contract-level protocol that a compliant Recipient\ncontract needs to support in order to be capable of accepting a meta\ntransaction through a compliant Forwarder contract that it trusts to help it\nidentify the address of the Transaction Signer.")]),t._v(" "),e("p",[t._v("No EVM-level protocol changes are proposed or required.")]),t._v(" "),e("h2",{attrs:{id:"motivation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),e("p",[t._v("There is a growing interest in making it possible for Ethereum contracts to\naccept calls from externally owned accounts that do not have ETH to pay for\ngas.")]),t._v(" "),e("p",[t._v("This can be accomplished with meta transactions, which are transactions that\nhave been:")]),t._v(" "),e("ol",[e("li",[t._v("Authorized by the "),e("strong",[t._v("Transaction Signer")]),t._v(". For example, signed by an\nexternally owned account.")]),t._v(" "),e("li",[t._v("Relayed by an untrusted third party that pays for the gas (the "),e("strong",[t._v("Gas\nRelay")]),t._v(")")])]),t._v(" "),e("p",[e("code",[t._v("msg.sender")]),t._v(" is a transaction parameter that can be inspected by a contract to\ndetermine who signed the transaction. The integrity of this parameter is\nguaranteed by the Ethereum EVM, but for a meta transaction securing\n"),e("code",[t._v("msg.sender")]),t._v(" is insufficient.")]),t._v(" "),e("p",[t._v("The problem is that for a contract that is not natively aware of meta\ntransactions, the "),e("code",[t._v("msg.sender")]),t._v(" of the transaction will make it appear to be\ncoming from the "),e("strong",[t._v("Gas Relay")]),t._v(" and not the "),e("strong",[t._v("Transaction Signer")]),t._v(". A secure\nprotocol for a contract to accept meta transactions needs to prevent the "),e("strong",[t._v("Gas\nRelay")]),t._v(" from forging, modifying or duplicating requests by the "),e("strong",[t._v("Transaction\nSigner")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"specification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),e("p",[t._v('The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",\n"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be\ninterpreted as described in '),e("a",{attrs:{href:"https://www.ietf.org/rfc/rfc2119.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 2119"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Here is an example flow:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(357),alt:"Example flow"}})]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Transaction Signer")]),t._v(" - entity that signs & sends to request to "),e("strong",[t._v("Gas\nRelay")])]),t._v(" "),e("li",[e("strong",[t._v("Gas Relay")]),t._v(" - receives a signed request off-chain from "),e("strong",[t._v("Transaction\nSigner")]),t._v(" and pays gas to turn it into a valid transaction that goes through\n"),e("strong",[t._v("Trusted Forwarder")])]),t._v(" "),e("li",[e("strong",[t._v("Trusted Forwarder")]),t._v(" - a contract that is trusted by the "),e("code",[t._v("Recipient")]),t._v(" to\ncorrectly verify the signature and nonce before forwarding the request from\n"),e("strong",[t._v("Transaction Signer")])]),t._v(" "),e("li",[e("strong",[t._v("Recipient")]),t._v(" - a contract that can securely accept meta-transactions\nthrough a "),e("strong",[t._v("Trusted Forwarder")]),t._v(" by being compliant with this standard.")])]),t._v(" "),e("h3",{attrs:{id:"extracting-the-transaction-signer-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extracting-the-transaction-signer-address"}},[t._v("#")]),t._v(" Extracting The Transaction Signer address")]),t._v(" "),e("p",[t._v("The "),e("strong",[t._v("Trusted Forwarder")]),t._v(" is responsible for calling the "),e("strong",[t._v("Recipient")]),t._v(" contract\nand MUST append the address of the "),e("strong",[t._v("Transaction Signer")]),t._v(" (20 bytes of data) to\nthe end of the call data.")]),t._v(" "),e("p",[t._v("For example :")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" success"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" returnData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodePacked")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("The "),e("strong",[t._v("Recipient")]),t._v(" contract can then extract the "),e("strong",[t._v("Transaction Signer")]),t._v(" address\nby performing 3 operations:")]),t._v(" "),e("ol",[e("li",[t._v("Check that the "),e("strong",[t._v("Forwarder")]),t._v(" is trusted. How this is implemented is out of\nthe scope of this proposal.")]),t._v(" "),e("li",[t._v("Extract the "),e("strong",[t._v("Transaction Signer")]),t._v(" address from the last 20 bytes of the\ncall data and use that as the original "),e("code",[t._v("sender")]),t._v(" of the transaction (instead of "),e("code",[t._v("msg.sender")]),t._v(")")]),t._v(" "),e("li",[t._v("If the "),e("code",[t._v("msg.sender")]),t._v(" is not a trusted forwarder (or if the msg.data is\nshorter than 20 bytes), then return the original "),e("code",[t._v("msg.sender")]),t._v(" as it is.")])]),t._v(" "),e("p",[t._v("The "),e("strong",[t._v("Recipient")]),t._v(" MUST check that it trusts the Forwarder to prevent it from\nextracting address data appended from an untrusted contract. This could result\nin a forged address.")]),t._v(" "),e("h3",{attrs:{id:"protocol-support-discovery-mechanism"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protocol-support-discovery-mechanism"}},[t._v("#")]),t._v(" Protocol Support Discovery Mechanism")]),t._v(" "),e("p",[t._v("Unless a "),e("strong",[t._v("Recipient")]),t._v(" contract is being used by a particular frontend that\nknows that this contract has support for native meta transactions, it would not\nbe possible to offer the user the choice of using meta-transaction to interact\nwith the contract. We thus need a mechanism by which the "),e("strong",[t._v("Recipient")]),t._v(" can let\nthe world know that it supports meta transactions.")]),t._v(" "),e("p",[t._v("This is especially important for meta transactions to be supported at the Web3\nwallet level. Such wallets may not necessarily know anything about the\n"),e("strong",[t._v("Recipient")]),t._v(" contract users may wish to interact with.")]),t._v(" "),e("p",[t._v("As a "),e("strong",[t._v("Recipient")]),t._v(" could trust forwarders with different interfaces and\ncapabilities (e.g., transaction batching, different message signing formats),\nwe need to allow wallets to discover which Forwarder is trusted.")]),t._v(" "),e("p",[t._v("To provide this discovery mechanism a "),e("strong",[t._v("Recipient")]),t._v(" contract MUST implement\nthis function:")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTrustedForwarder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" forwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("That function MUST return true if the forwarder is trusted by the\nRecipient.")]),t._v(" "),e("li",[t._v("That function MUST return false if the forwarder is not trusted.")]),t._v(" "),e("li",[t._v("That function MUST NOT throw a revert.")])]),t._v(" "),e("p",[t._v("Internally, the "),e("strong",[t._v("Recipient")]),t._v(" MUST then accept a request from forwarder")]),t._v(" "),e("p",[t._v("That function can be called on-chain and as such gas restriction needs to be\nput in place.")]),t._v(" "),e("p",[t._v("A Gas limit of 50k is enough for making  the decision either inside the\ncontract, or delegating it to another contract and doing some memory access\ncalculations, like querying a mapping.")]),t._v(" "),e("h3",{attrs:{id:"recipient-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#recipient-example"}},[t._v("#")]),t._v(" Recipient example")]),t._v(" "),e("div",{staticClass:"language-solidity line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-solidity"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RecipientExample")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("purchaseItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" itemId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" sender "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("_msgSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" perform the purchase "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" sender\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" immutable _trustedForwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" trustedForwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("internal")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _trustedForwarder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trustedForwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTrustedForwarder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" forwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" forwarder "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _trustedForwarder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("_msgSender")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("internal")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("payable")]),t._v(" signer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        signer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sender"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTrustedForwarder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assembly")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                signer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("96")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calldataload")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calldatasize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("h2",{attrs:{id:"rationale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Make it easy for contract developers to add support for meta\ntransactions by standardizing the simplest viable contract interface.")])]),t._v(" "),e("li",[e("p",[t._v("Without support for meta transactions in the recipient contract, an externally owned\naccount can not use meta transactions to interact with the recipient contract.")])]),t._v(" "),e("li",[e("p",[t._v("Without a standard contract interface, there is no standard way for a client\nto discover whether a recipient supports meta transactions.")])]),t._v(" "),e("li",[e("p",[t._v("Without a standard contract interface, there is no standard way to send a\nmeta transaction to a recipient.")])]),t._v(" "),e("li",[e("p",[t._v("Without the ability to leverage a trusted forwarder every recipient contract\nhas to internally implement the logic required to accept meta transactions securely.")])]),t._v(" "),e("li",[e("p",[t._v("Without a discovery protocol, there is no mechanism for a client to discover\nwhether a recipient supports a specific forwarder.")])]),t._v(" "),e("li",[e("p",[t._v("Making the contract interface agnostic to the internal implementation\ndetails of the trusted forwarder, makes it possible for a recipient contract\nto support multiple forwarders with no change to code.")])])]),t._v(" "),e("h2",{attrs:{id:"security-considerations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[t._v("#")]),t._v(" Security Considerations")]),t._v(" "),e("p",[t._v("A bad forwarder may allow forgery of the "),e("code",[t._v("msg.sender")]),t._v(" returned from\n"),e("code",[t._v("_msgSender()")]),t._v(" and allow transactions to appear to be coming from any address.")]),t._v(" "),e("p",[t._v("This means a recipient contract should be very careful which forwarder it\ntrusts and whether this can be modified. The power to change the forwarder\ntrusted by a recipient is equivalent to giving full control over the contract.\nIf this kind of control over the recipient is acceptable, it is recommended\nthat only the owner of the recipient contract be able to modify which forwarder\nis trusted. Otherwise best to leave it unmodifiable, as in the example above.")]),t._v(" "),e("h2",{attrs:{id:"implementations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implementations"}},[t._v("#")]),t._v(" Implementations")]),t._v(" "),e("p",[t._v("An implementation of a base class for a recipient: "),e("a",{attrs:{href:"https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseRelayRecipient.sol"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"copyright"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),e("p",[t._v("Copyright and related rights waived via\n"),e("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),e("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);